version: "3.8"

services:

# RABBIT MQ SHARED BETWEEN ALL THE SERVICES
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: clearSky-rabbitmq
    ports:
      - "5673:5672"    # AMQP port
      - "15673:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      retries: 5
    networks:
      - clearSky-net

  orchestrator:
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    volumes:
      - ./orchestrator/configs:/app/configs
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    environment:
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672/
    networks:
      - clearSky-net

# STUDENT REQUEST DB
  student_db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: reviewsdb
    ports:
      - "5440:5432"
    volumes:
      - student_db_data:/var/lib/postgresql/data
      - ./student_request_review_service/db/reviewsdb.sql:/docker-entrypoint-initdb.d/reviewsdb.sql
    networks:
      - clearSky-net

# STUDENT REQUEST SERVICE
  student_request_review_service:
    build:
      context: ./student_request_review_service
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - student_db
    environment:
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/
      DATABASE_URL: postgres://postgres:root@student_db:5432/reviewsdb?sslmode=disable

    networks:
      - clearSky-net

# INSTRUCTOR DB

  instructor_db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: reviewsdbinst
    ports:
      - "5441:5432"
    volumes:
      - instructor_db_data:/var/lib/postgresql/data
      - ./instructor_review_reply_service/db/reviewsdb.sql:/docker-entrypoint-initdb.d/reviewsdb.sql
    networks:
      - clearSky-net

# INSTRUCTOR RESPONSE SERVICE
  instructor_review_reply_service:
    build:
      context: ./instructor_review_reply_service
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - instructor_db
    environment:
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/
      DATABASE_URL: postgres://postgres:root@instructor_db:5432/reviewsdbinst?sslmode=disable    
    networks:
      - clearSky-net

  #credits service! 
  credits_db:
    image: postgres:14
    container_name: credits_postgres1
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2002
      POSTGRES_DB: credits
    volumes:
      - ./credits_service/db-init:/docker-entrypoint-initdb.d:ro
      - credits_pgdata:/var/lib/postgresql/data
    ports:
      - "5442:5432"
    networks:
      - clearSky-net

  credits_service:
    build:
      context: ./credits_service
      dockerfile: Dockerfile
    container_name: credits_service
    restart: on-failure
    depends_on:
      - credits_db
      - rabbitmq
    env_file: ./credits_service/.env
    ports:
      - "8081:8080"
    networks:
    - clearSky-net

  # FRONT END
  frontend:
      build: ./front-end
      ports:
        - "3000:3000"
      depends_on:
        - orchestrator
      networks:
        - clearSky-net
  

networks:
  clearSky-net:
    driver: bridge


volumes:
  student_db_data:
  instructor_db_data:
  credits_pgdata:
